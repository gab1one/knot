<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<knimeNode icon="./road-route-map-16.png" type="Manipulator" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>FCD Trajectory Restorator</name>
    
    <shortDescription>
        Performs trajectory restoration from Floating Car Data (FCD).
    </shortDescription>
    
    <fullDescription>
        <intro>The Node takes as input the table Positions in Routes of the node Trajectory Assigner and proceeds to match it to routes, 
        shown as a Linestring of lon/lat pairs (accordingly to WKT). The node assumes that the input data contains at least the following information:
        an id of the vehicle, an id of the route, a time, a Point.
        The routing calculations are done via an external API (the current version supports only Project OSRM).</intro>
  		 <option name="Coordinate Pair Type" > Specifies if the input data positions are either lat/lon or lon/lat.
   		 </option>
    	
    	<option name="Routing Service">The routing service to be used. </option>
    	
	    <option name="Routing Server Host" > Specifies the host for the routing service. 
	    </option>
	    
	    <option name="Routing Mode" > Allows the user to select how the routes should be calculated.
	    </option>
	    
	     <option name="Minum Duration">A route that lasts less than this number of minutes will be discarded. 
	    </option>
	    
	      <option name="Minum Distance">A route that lasts less than this number of meters will be discarded. 
	    </option>
	     
    
    </fullDescription>
    
   
    
    
    <ports>
        <inPort index="0" name="Positions Data-Set">The input table must contains at least the following columns: 
        	<ul>
        		<li>route_id, a long identifying the route.</li>
        		<li>owner_id, an integer identifying the owner of the position;</li>
        		<li>timestamp, a String identifying when this position was recorded;</li>
        		<li>location, a String containing the location similar to POINT( coordinate1 coordinate2).</li>
        	</ul>
        	The input data must be sorted by route_id. The best way to achieve this conditions is to use
        	the node Trajectory Assigner of the KNOT toolkit.
        </inPort>
        <outPort index="0" name="Routes">This port contains the routes calculated accordingly to the route type chosen in the settings</outPort>
    </ports>    
</knimeNode>
