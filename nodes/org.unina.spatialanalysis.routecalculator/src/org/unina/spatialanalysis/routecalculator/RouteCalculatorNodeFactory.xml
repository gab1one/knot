<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<knimeNode icon="./road-route-map-16.png" type="Manipulator" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
	<name>Trajectory Manipulator</name>

	<shortDescription>
        Manipulates Floating Car Data (FCD) trajectories accordin to customizable strategies.
    </shortDescription>

	<fullDescription>
		<intro>The Node takes as input a table with the same structure as the Positions in Routes output of the KNOT Trajectory Partitioner node and proceeds to manipulate the original trajectories, producing in output 
        new trajectories encoded as WKT Linestrings of lon/lat pairs. The node assumes that the input data contains at least the following information:
        an id of the vehicle, an id of the route, a time, a GPS position.
        The routing calculations are done via an external API (the current version supports only Project OSRM).</intro>

		<option name="Coordinate Pair Type"> Specifies if the input data positions are either lat/lon or lon/lat.</option>
		<option name="Routing Service">The routing service to be used. </option>
		<option name="Routing Server Host"> Specifies the host for the routing service.</option>
		<option name="Routing Mode"> Allows the user to select how the routes should be calculated.</option>
		<option name="Minum Duration">A route that lasts less than this number of minutes will be discarded.</option>
		<option name="Minum Distance">A route that lasts less than this number of meters will be discarded.</option>
	</fullDescription>
	<ports>
		<inPort index="0" name="Positions Data-Set">
			The input table must contains at least the following columns:
			<ul>
				<li>route_id, a long identifying the route.</li>
				<li>owner_id, an integer identifying the owner of the position;</li>
				<li>timestamp, a String identifying when this position was recorded;</li>
				<li>location, a String containing the location similar to POINT( coordinate1 coordinate2).</li>
			</ul>
			The input data must be sorted by route_id. The best way to achieve this conditions is to use
        	the node Trajectory Assigner of the KNOT toolkit.
		</inPort>
		<outPort index="0" name="Routes">This port contains the routes calculated accordingly to the route type chosen in the settings</outPort>
	</ports>
</knimeNode>
